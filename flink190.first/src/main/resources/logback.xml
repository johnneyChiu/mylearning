<?xml version="1.0" encoding="UTF-8"?>
<!--私人订制-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!--时间戳字符串   设置将当前时间（解析配置文件的时间）转换为字符串的模式-->
    <timestamp key="defaultDatePattern" value="yyyy-MM-dd HH:mm:ss:SSS"/>
    <property resource="log.properties"></property>

    <!-- 负责写控制台日志 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <Pattern>${defaultPattern}</Pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!-- 文件日志 -->
    <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--接入pinpoint 如果没有为logutil-->
        <file>${logger.root:-/home/tmp/logs}/${app.name}/${logger.debug.child:-debug}/${pinpoint.applicationName-:logutil}-debug.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.root:-/home/tmp/logs}/${app.name}/${logger.debug.child:-debug}/${pinpoint.applicationName-:logutil}-debug.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>${log.debug.maxHistory:-20}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${log.debug.maxFile:-50M}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${defaultPattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logger.root:-/home/tmp/logs}/${app.name}/${logger.info.child:-info}/${pinpoint.applicationName-:logutil}-info.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.root:-/home/tmp/logs}/${app.name}/${logger.info.child:-info}/${pinpoint.applicationName-:logutil}-info.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>${log.info.maxHistory:-30}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${log.info.maxFile:-100M}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${defaultPattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>
    <!-- 异常日志输出-->
    <appender name="exception" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logger.root:-/home/tmp/logs}/${app.name}/${logger.exception.child:-exception}/${pinpoint.applicationName-:logutil}-exception.log</file>
        <!--求值过滤器，评估、鉴别日志是否符合指定条件. 需要额外的两个JAR包，commons-compiler.jar和janino.jar -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
        <!--默认为 ch.qos.logback.classic.boolex.JaninoEventEvaluator-->
        <evaluator>
        <!--过滤掉所有日志消息中不包含"Exception"字符串的日志-->
        <expression>return message.contains("Exception");</expression>
        </evaluator>
        <OnMatch>ACCEPT</OnMatch>
        <OnMismatch>DENY</OnMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.root:-/home/tmp/logs}/${app.name}/${logger.exception.child:-exception}/${pinpoint.applicationName-:logutil}-exception.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>${log.exception.maxHistory:-10}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${log.exception.maxFile:-30M}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>${defaultPattern}</pattern>
            <charset>${log.charset}</charset>
        </encoder>
    </appender>

    <appender name="warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logger.root:-/home/tmp/logs}/${app.name}/${logger.warn.child:-warn}/${pinpoint.applicationName-:logutil}-warn.log</file>
        <encoder>
            <Pattern>${defaultPattern}</Pattern>
            <charset>${log.charset}</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.root:-/home/tmp/logs}/${app.name}/${logger.warn.child:-warn}/${pinpoint.applicationName-:logutil}-warn.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>${log.warn.maxHistory:-30}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${log.warn.maxFile:-30M}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logger.root:-/home/tmp/logs}/${app.name}/${logger.error.child:-error}/${pinpoint.applicationName-:logutil}-error.log</file>
        <encoder>
            <Pattern>${defaultPattern}</Pattern>
            <charset>${log.charset}</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logger.root:-/home/tmp/logs}/${app.name}/${logger.error.child:-error}/${pinpoint.applicationName-:logutil}-error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxHistory>${log.error.maxHistory:-30}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${log.error.maxFile:-30M}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!--AsyncAppender-->
    <appender name="SYNC_ROLLING_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="ROLLING_FILE"/>
        <queueSize>${log.async.queueSize:-1024}</queueSize>
        <discardingThreshold>${log.async.discardingThreshold:-0}</discardingThreshold>
    </appender>


    <logger name="ch.qos.logback" />

    <root level="debug">
        <!--测试，开发环境需要打印日志 jvm环境变量-Dlogback.env=dev -->
        <if condition='property("logback.env").contains("dev")'>
            <then>
                <appender-ref ref="stdout" />
                <appender-ref ref="debug" />
                <appender-ref ref="info" />
                <appender-ref ref="exception" />
                <appender-ref ref="warn" />
                <appender-ref ref="error" />
                <appender-ref ref="SYNC_ROLLING_FILE"/>
            </then>
            <else>
                <appender-ref ref="info" />
                <appender-ref ref="exception" />
                <appender-ref ref="warn" />
                <appender-ref ref="error" />
                <appender-ref ref="SYNC_ROLLING_FILE"/>
            </else>
        </if>



    </root>

</configuration>